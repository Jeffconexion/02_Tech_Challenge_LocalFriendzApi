# Workflow para build e testes do projeto LocalFriendz
# Veja mais detalhes em: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: LocalFriendz Workflow

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Passo 1: Checkout do repositório
      - name: Step 1 Checkout Repository
        uses: actions/checkout@v4

      # Passo 2: Configurar o .NET
      - name: Step 2 Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # Passo 3: Restaurar dependências
      - name: Step 3 Restore Dependencies
        run: dotnet restore ./LocalFriendz/LocalFriendz.sln # Ajuste o caminho para o arquivo de solução ou projeto

      # Passo 4: Construir o projeto
      - name: Step 4 Build Project
        run: dotnet build ./LocalFriendz/LocalFriendz.sln --no-restore # Ajuste o caminho para o arquivo de solução ou projeto

      # Passo 5: Análise de código com StyleCop
      - name: Step 5 Run StyleCop Analysis
        run: dotnet build ./LocalFriendz/LocalFriendz.sln --no-restore

  tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Passo 1: Checkout do repositório
      - name: Step 1 Checkout Repository
        uses: actions/checkout@v4

      # Passo 2: Configurar o .NET
      - name: Step 2 Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # Passo 3: Executar testes
      - name: Step 3 Run Tests
        run: dotnet test ./LocalFriendz/LocalFriendz.sln --verbosity normal # Ajuste o caminho para o arquivo de solução ou projeto

  security_tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Passo 1: Checkout do repositório
      - name: Step 1 Checkout Repository
        uses: actions/checkout@v4

      # Passo 2: Configurar o .NET
      - name: Step 2 Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # Passo 3: Configurar e Executar Análise com SonarCloud
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v3.0.0
        with:
          args: >
            -Dsonar.projectKey=LocalFriendz
            -Dsonar.organization=your-organization
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      # Passo 4: Configurar o SonarCloud
      - name: SonarCloud Configure
        uses: SonarSource/sonarcloud-github-action@v3.0.0
        with:
          args: >
            -Dsonar.projectKey=LocalFriendz
            -Dsonar.organization=your-organization
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
